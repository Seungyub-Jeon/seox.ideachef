<context>
# Overview  
한국어 웹사이트 분석 북마클릿은 웹 개발자, 콘텐츠 제작자, 마케터가 현재 보고 있는 웹페이지의 SEO, 웹표준, 웹접근성을 즉시 분석하여 한국어로 상세한 보고서를 제공하는 도구입니다. 영어권에서는 유사한 도구가 다수 존재하지만, 한국어 사용자를 위한 전문적인 도구는 부족한 실정입니다. 이 북마클릿은 버튼 한 번으로 페이지의 주요 요소를 분석하고, 개선이 필요한 부분에 대한 실질적인 가이드를 한국어로 제공합니다.

# Core Features  
- **빠른 페이지 분석**: 북마클릿 활성화 시 현재 페이지의 HTML 구조, 메타 태그, 콘텐츠 분석 즉시 실행
- **SEO 분석**: 제목 태그, 메타 설명, 헤딩 구조, 이미지 최적화, 내부/외부 링크, 키워드 밀도 등 평가
- **웹표준 검증**: HTML 유효성, 구조적 마크업, 시맨틱 태그 사용 여부 분석
- **웹접근성 점검**: 대체 텍스트, 키보드 접근성, 색상 대비, ARIA 속성, 문서 구조 등 접근성 요소 평가
- **종합 보고서 생성**: 분석 결과를 시각적으로 명확하게 표현하는 직관적인 대시보드 제공
- **실행 가능한 개선 제안**: 각 문제점에 대한 구체적인 해결 방법 제시
- **점수 시각화**: 각 영역별 점수 및 전체 성능을 백분율로 표시하여 직관적 이해 지원

# User Experience  
- **주요 페르소나**:
  1. 웹 개발자: 개발한 사이트가 표준과 접근성을 준수하는지 확인하고자 하는 프론트엔드 개발자
  2. 콘텐츠 관리자: 회사 웹사이트의 SEO를 개선하고자 하는 마케터나 콘텐츠 관리자
  3. 웹 디자이너: 디자인한 웹사이트가 접근성 기준을 충족하는지 확인하려는 디자이너
  4. QA 엔지니어: 웹사이트의 품질을 테스트하고 검증하려는 QA 전문가

- **주요 사용자 플로우**:
  1. 브라우저 북마크바에 북마클릿 추가 → 분석하려는 웹사이트 방문 → 북마클릿 클릭
  2. 분석 진행(로딩 표시) → 분석 결과 대시보드 오버레이 표시
  3. 영역별 상세 결과 탐색 → 특정 문제점에 대한 상세 설명 및 해결 방법 확인
  4. 결과 다운로드 또는 공유 (선택 사항)

- **UI/UX 고려사항**:
  - 현재 페이지 위에 오버레이 형태로 결과 표시 (페이지 이동 없음)
  - 탭 기반 인터페이스로 SEO, 웹표준, 웹접근성 영역 구분
  - 문제의 심각도에 따른 색상 코드 (빨강-노랑-초록)
  - 직관적인 차트와 점수 시각화
  - 깔끔하고 세련된 한국어 UI
  - 모바일 반응형 결과 화면 지원
</context>
<PRD>
# Technical Architecture  
## 시스템 구성 요소

### 1. 북마클릿 코어
- **기능**: 초기 실행 및 페이지 데이터 수집, 분석
- **구현 방식**: 순수 JavaScript 북마클릿 코드, 압축된 형태 제공
- **주요 역할**: 
  - 현재 페이지 HTML/CSS 파싱
  - 클라이언트 측 분석 수행
  - 분석 결과 오버레이 렌더링

### 2. 프론트엔드 (순수 HTML/CSS/JavaScript)
- **사용 기술**: 바닐라 JavaScript, CSS3, HTML5
- **주요 컴포넌트**:
  - 분석 결과 대시보드 (오버레이)
  - 탭 기반 인터페이스
  - 기본 차트 및 그래프 (SVG 또는 Canvas 기반)
  - 개선 제안 컴포넌트

### 3. 백엔드 (PHP)
- **사용 기술**: PHP 7+
- **주요 기능**:
  - 선택적 서버 측 분석 (무거운 작업용)
  - 분석 결과 저장 (선택적)
  - 간단한 API 엔드포인트 제공

### 4. 데이터 저장
- **사용 기술**: JSON 파일 또는 경량 SQLite
- **저장 데이터**:
  - 분석 이력 (선택적)
  - 기본 통계 데이터

## 파일 및 폴더 구조

```
web-analyzer/
│
├── assets/
│   ├── css/
│   │   ├── main.css               # 메인 스타일시트
│   │   ├── overlay.css            # 오버레이 스타일
│   │   └── charts.css             # 차트 관련 스타일
│   │
│   ├── js/
│   │   ├── bookmarklet.js         # 북마클릿 소스 코드 (비압축)
│   │   ├── bookmarklet.min.js     # 압축된 북마클릿 코드
│   │   ├── analyzer/
│   │   │   ├── seo.js             # SEO 분석 모듈
│   │   │   ├── standards.js       # 웹표준 분석 모듈
│   │   │   ├── accessibility.js   # 웹접근성 분석 모듈
│   │   │   ├── performance.js     # 성능 분석 모듈
│   │   │   ├── security.js        # 보안 분석 모듈
│   │   │   └── mobile.js          # 모바일 친화성 분석 모듈
│   │   │
│   │   ├── ui/
│   │   │   ├── overlay.js         # 오버레이 UI 관리
│   │   │   ├── tabs.js            # 탭 인터페이스 관리
│   │   │   ├── charts.js          # 차트 렌더링
│   │   │   └── details.js         # 상세 정보 패널
│   │   │
│   │   └── utils/
│   │       ├── parser.js          # HTML 파싱 유틸리티
│   │       ├── css-parser.js      # CSS 파싱 유틸리티 
│   │       ├── score.js           # 점수 계산 유틸리티
│   │       └── report.js          # 보고서 생성 유틸리티
│   │
│   └── images/                    # 아이콘 및 이미지
│
├── server/
│   ├── api.php                    # 간단한 API 엔드포인트
│   ├── save-report.php            # 보고서 저장 스크립트
│   ├── load-report.php            # 보고서 불러오기 스크립트
│   └── lib/
│       ├── analyzer.php           # 서버 측 분석 라이브러리
│       └── db.php                 # 간단한 DB 인터페이스
│
├── data/
│   ├── reports/                   # 저장된 보고서 (JSON)
│   └── stats/                     # 기본 통계 데이터
│
├── templates/
│   ├── overlay.html               # 오버레이 HTML 템플릿
│   ├── tabs/
│   │   ├── seo.html               # SEO 탭 템플릿
│   │   ├── standards.html         # 웹표준 탭 템플릿
│   │   ├── accessibility.html     # 웹접근성 탭 템플릿
│   │   ├── performance.html       # 성능 탭 템플릿
│   │   ├── security.html          # 보안 탭 템플릿
│   │   └── mobile.html            # 모바일 친화성 탭 템플릿
│   └── components/
│       ├── score-card.html        # 점수 카드 컴포넌트
│       ├── detail-panel.html      # 상세 패널 컴포넌트
│       └── suggestion-item.html   # 제안 항목 컴포넌트
│
├── index.html                     # 메인 랜딩 페이지 (설치 안내)
└── .htaccess                      # 아파치 설정 파일
```

# Development Roadmap  
## 1단계: 핵심 기능 개발 (MVP)
- **북마클릿 기본 구조 개발**
  - 페이지 HTML 수집 및 기본 분석 기능
  - 클라이언트 측 분석 엔진 구현
  - 기본 오버레이 UI 구현
  
- **핵심 분석 기능 구현**
  - SEO 기본 요소 분석 (메타 태그, 제목, 헤딩 구조)
  - 기본 웹표준 검증 (HTML 유효성)
  - 기본 웹접근성 점검 (이미지 대체 텍스트)
  
- **기본 보고서 UI 개발**
  - 탭 기반 결과 표시
  - 기본 점수 시각화
  - 주요 문제점 목록

## 2단계: 기능 확장 및 개선
- **분석 엔진 고도화**
  - 고급 SEO 분석 (키워드 밀도, 소셜 메타, 내부 링크 구조)
  - 심화 웹표준 검증 (CSS 유효성, JS 오류)
  - 고급 웹접근성 점검 (키보드 접근성, 색상 대비)
  - 성능 및 모바일 친화성 기본 분석 추가
  
- **UI/UX 개선**
  - 개선된 차트 및 그래프
  - 상세 문제 설명 및 코드 하이라이팅
  - 반응형 오버레이 최적화
  
- **서버 측 기능 추가**
  - 간단한 보고서 저장 기능
  - 보고서 공유 기능
  - 기본 통계 기능

## 3단계: 성능 최적화 및 확장
- **성능 최적화**
  - 북마클릿 코드 경량화
  - 분석 알고리즘 최적화
  - 로딩 시간 단축
  
- **추가 모듈 개발**
  - 보안 분석 모듈 완성
  - 국제화 및 지역화 분석 모듈 추가
  - 소셜 미디어 최적화 모듈 강화
  
- **확장성 개선**
  - 커스텀 규칙 지원
  - 다국어 지원 준비
  - API 확장 (선택적)

## 4단계: 고급 기능 및 도구 통합
- **고급 분석 기능**
  - 경쟁사 웹사이트 비교 분석
  - 시간에 따른 개선 추적
  - 업계별 벤치마크 데이터 제공
  
- **외부 도구 통합**
  - Google PageSpeed Insights 데이터 연동
  - W3C 검증 서비스 연동
  - 웹접근성 평가 도구 연동
  
- **고급 시각화**
  - 인터랙티브 분석 리포트
  - 사용자 정의 대시보드
  - 시각적 코드 에디터

# Logical Dependency Chain
## 개발 순서 및 의존성
1. **북마클릿 핵심 구조** → HTML 파서 → 기본 분석 엔진
2. **기본 UI 구성 요소** → 오버레이 → 탭 인터페이스
3. **개별 분석 모듈** → SEO → 웹표준 → 웹접근성
4. **결과 시각화** → 점수 계산 → 차트 및 그래프
5. **확장 모듈** → 성능 → 모바일 → 보안
6. **서버 측 기능** → 보고서 저장 → 보고서 공유
7. **고급 기능** → 비교 분석 → 추적 → 통합

## 기술적 의존성
- 모든 분석은 클라이언트 측 JavaScript로 우선 구현
- 무거운 작업만 선택적으로 서버 측으로 이관 (PHP)
- 최소한의 외부 라이브러리 사용 (바닐라 JS 우선)
- 필요한 경우 경량 차트 라이브러리 고려 (Chart.js 또는 직접 SVG 구현)
- 아파치 서버의 기본 기능만 사용 (복잡한 서버 설정 불필요)

# Risks and Mitigations  
## 기술적 리스크

| 리스크 | 설명 | 완화 방안 |
|-------|------|----------|
| 북마클릿 크기 제한 | 북마클릿 URL 길이 제한으로 인한 기능 제약 | 로더 스크립트 패턴 사용, 메인 코드는 외부에서 로드 |
| 복잡한 페이지 처리 | 동적 콘텐츠가 많은 SPA 처리 어려움 | 페이지 완전 로드 후 분석, MutationObserver 활용 |
| 브라우저 호환성 | 다양한 브라우저에서 일관된 작동 보장 | 코어 JavaScript 기능만 사용, 폴리필 최소화 |
| 성능 문제 | 대규모 페이지 분석 시 브라우저 멈춤 | 비동기 처리, 작업 분할, 점진적 분석 |
| 분석 정확도 | 클라이언트 측 도구의 정확도 한계 | 중요 분석은 서버 측 보완, 명확한 신뢰도 표시 |

## 사용자 경험 리스크

| 리스크 | 설명 | 완화 방안 |
|-------|------|----------|
| UI 복잡성 | 많은 정보로 인한 사용자 혼란 | 계층적 정보 구조, 탭 인터페이스, 중요도별 정렬 |
| 분석 정확도 | 클라이언트 측 분석의 한계 | 중요한 검사는 서버 측으로 이관 가능성 유지 |
| 오버레이 충돌 | 웹사이트 자체 요소와 오버레이 충돌 | 격리된 스타일, CSS 리셋, Shadow DOM 고려 |
| 데이터 과부하 | 너무 많은 데이터로 인한 의사결정 어려움 | 우선순위 추천, 액션 아이템 분류, 단계별 개선 제안 |

## 서버 리스크

| 리스크 | 설명 | 완화 방안 |
|-------|------|----------|
| 서버 리소스 제한 | 디지털 오션 기본 서버의 리소스 제약 | 클라이언트 측 처리 최대화, 서버 작업 최소화 |
| 데이터 저장 공간 | 많은 보고서 저장 시 디스크 공간 부족 | 데이터 압축, 오래된 보고서 자동 정리 |
| 동시 요청 처리 | 다수 사용자의 동시 사용 시 서버 부하 | 로드 밸런싱, 캐싱, 비동기 처리 |

# Appendix  
## 북마클릿 설치 코드
```javascript
javascript:(function(){
  var script = document.createElement('script');
  script.src = 'https://your-domain.com/assets/js/bookmarklet.min.js?v=' + new Date().getTime();
  document.body.appendChild(script);
})();
```

## 보고서 구조 예시
```json
{
  "meta": {
    "url": "https://example.com",
    "title": "Example Website",
    "datetime": "2025-05-15T15:30:45Z",
    "version": "1.0.0"
  },
  "scores": {
    "overall": 78,
    "seo": 82,
    "standards": 75,
    "accessibility": 68,
    "performance": 85,
    "mobile": 80,
    "security": 72
  },
  "summary": {
    "issues_count": {
      "critical": 3,
      "major": 8,
      "minor": 15,
      "info": 22
    },
    "top_issues": [
      {
        "id": "a11y-01",
        "category": "accessibility",
        "severity": "critical",
        "title": "이미지에 대체 텍스트 없음",
        "element_count": 12
      }
      // ... 기타 주요 이슈
    ]
  },
  "categories": {
    "seo": {
      "score": 82,
      "sub_scores": {
        "meta_tags": 90,
        "content": 75,
        "links": 85,
        "structured_data": 70
      },
      "issues": [
        // SEO 관련 이슈 목록
      ]
    }
    // ... 기타 카테고리별 세부 정보
  },
  "recommendations": [
    {
      "priority": 1,
      "category": "accessibility",
      "title": "모든 이미지에 대체 텍스트 추가",
      "description": "...",
      "effort": "medium",
      "impact": "high"
    }
    // ... 기타 권장 사항
  ]
}
```

## 사용자 인터페이스 구성요소

### 1. 메인 대시보드
- **종합 점수 카드**
  - 전체 점수 (백분율)
  - 카테고리별 점수 (SEO, 웹표준, 웹접근성, 성능, 모바일)
  - 레이더 차트 시각화

- **주요 문제점 요약**
  - 중요도별 문제 목록 (심각, 중요, 정보)
  - 카테고리별 문제 분포 차트
  - 빠른 개선 가능 항목 강조

- **페이지 정보**
  - URL 및 타이틀
  - 분석 일시
  - 기본 메타데이터

### 2. 카테고리 탭
- **SEO 탭**
  - 점수 및 요약
  - 하위 카테고리별 결과 (메타데이터, 콘텐츠, 링크 등)
  - 구체적 개선 제안

- **웹표준 탭**
  - HTML/CSS/JS 유효성 요약
  - 오류 및 경고 목록
  - 코드 스니펫 및 수정 제안

- **웹접근성 탭**
  - WCAG 준수 상태
  - 접근성 문제 목록
  - 심각도별 구분 및 수정 방법

- **성능 탭**
  - 로딩 속도 지표
  - 리소스 최적화 상태
  - 성능 개선 우선순위

- **모바일 탭**
  - 모바일 친화성 점수
  - 반응형 디자인 평가
  - 터치 최적화 상태

- **보안 탭**
  - 보안 설정 요약
  - 취약점 및 위험 요소
  - 보안 개선 제안

## 성능 최적화 전략
- **코드 모듈화 및 지연 로딩**
  - 분석 모듈 개별 로딩
  - 필요 시에만 분석 수행
  - 불필요한 코드 제거

- **작업 분할 및 비동기 처리**
  - 무거운 분석 작업 분할
  - Web Workers 활용 가능성
  - 점진적 결과 표시

- **메모리 관리 최적화**
  - 메모리 사용량 모니터링
  - 큰 DOM 조작 최소화
  - 불필요한 참조 제거

- **효율적인 DOM 조작**
  - 일괄 업데이트 패턴 사용
  - 가상 DOM 기법 적용
  - 렌더링 최적화

- **데이터 캐싱**
  - 분석 결과 캐싱
  - 부분 분석 결과 재사용
  - 로컬 스토리지 활용
</PRD>